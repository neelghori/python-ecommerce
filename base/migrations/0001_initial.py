# Generated by Django 4.1 on 2024-07-02 05:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('discount', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('bill_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('placed', 'Placed'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered')], default='placed', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-bill_date'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hex_code', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('material', models.CharField(choices=[('aluminium', 'Aluminium'), ('zinc', 'Zinc')], default='aluminium', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('customer', 'Customer'), ('retailer', 'Retailer')], default='customer', max_length=20)),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name='Last Name')),
                ('phone', models.CharField(max_length=15, null=True, verbose_name='Phone Number')),
                ('address', models.TextField(null=True, verbose_name='Address')),
                ('transport', models.CharField(max_length=100, null=True, verbose_name='Transport')),
                ('gst', models.CharField(max_length=20, null=True, verbose_name='GST Number')),
                ('city', models.CharField(max_length=50, null=True, verbose_name='City')),
                ('pincode', models.CharField(max_length=10, null=True, verbose_name='Pincode')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='variant_images/')),
                ('size_mm', models.CharField(choices=[('96', '96mm'), ('128', '128mm'), ('160', '160mm'), ('224', '224mm'), ('256', '256mm'), ('288', '288mm'), ('416', '416mm'), ('576', '576mm'), ('864', '864mm'), ('1184', '1184mm')], default='96', max_length=5)),
                ('size_inch', models.CharField(choices=[('4', '4"'), ('6', '6"'), ('8', '8"'), ('10', '10"'), ('12', '12"'), ('14', '14"'), ('16', '16"'), ('18', '18"'), ('24', '24"'), ('36', '36"'), ('48', '48"')], default='4', max_length=5)),
                ('price_customer', models.DecimalField(decimal_places=1, max_digits=10)),
                ('price_retailer', models.DecimalField(decimal_places=1, max_digits=10)),
                ('minimum_stock', models.PositiveIntegerField(default=0)),
                ('casting_stock', models.PositiveIntegerField(default=0)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('color_finish_down', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='color_finish_down', to='base.color')),
                ('color_finish_up', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='color_finish_up', to='base.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
            options={
                'unique_together': {('product', 'size_mm', 'color_finish_up', 'color_finish_down')},
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart_date', models.DateTimeField(auto_now_add=True)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('tags', models.TextField(blank=True, null=True)),
                ('bill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.bill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.variant')),
            ],
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.profile'),
        ),
    ]
